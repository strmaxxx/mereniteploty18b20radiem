<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="Gx.3l$A*WF.%@eaIzDJn" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="LRx,_xpKoj{6-J^`H!})" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace MereniTeplotyRadio {" line1="" line2="    // Další ikonky zde: https://fontawesome.com/v5/search?o=r&amp;m=free" line3="" line4="    /**" line5="     * Každých t_mereni ms (100 ms) změří hodnotu z teploměru a filtruje ji dolnopropustným filtrem." line6="     * Každých t_pause/5 ms (200 ms) ukládá aktuální hodnotu do bufferu, který obsahuje 5 hodnot." line7="     * Každých t_pause ms (1000 ms) odešle buffer s popisem hodnot rádiem." line8="     * Rádiem lze odeslat maximálně 19 bajtů. 5 čísel = 10 bajtů + 9 bajtů na popis hodnoty ASCII znaky" line9="     */" line10="" line11="    const pocet_cisel = 5;" line12="    const t_pause = 1000;" line13="    const t_mereni = 100;" line14="    const koef_zaokrouhleni = 10; // 10 = desetiny, 100 = setiny atd." line15="" line16="    //% block=&quot;Spustí měření a odesílání dat, skupina_rádia: %radioGroup, Hodnota k zobrazení: %typ_hodnoty, pin, kde je připojený teploměr: %vstupni_pin, popis_hodnoty (Maximálně 9 ASCII znaků): %popis_hodnoty&quot;" line17="    export function spustOdesilatele(radioGroup: number, typ_hodnoty: DS18B20.ValType, vstupni_pin: DigitalPin, popis_hodnoty: string) {" line18="" line19="        let prubezna_hodnota = 0;" line20="        let hodnota_k_odeslani = 0;" line21="" line22="        radio.setGroup(radioGroup);" line23="" line24="        control.inBackground(function () {" line25="" line26="            while (true) {" line27="" line28="                let hodnota = DS18B20.Ds18b20Temp(typ_hodnoty, vstupni_pin);" line29="" line30="                // volba filtru" line31="                if (true) {" line32="" line33="                    prubezna_hodnota = prubezna_hodnota * 0.9 + hodnota * 0.1;" line34="                    hodnota_k_odeslani = prubezna_hodnota;" line35="                } else {" line36="" line37="                    prubezna_hodnota += (hodnota - prubezna_hodnota) / 10;" line38="                    hodnota_k_odeslani = prubezna_hodnota;" line39="                }" line40="                pause(t_mereni);" line41="            }" line42="        });" line43="" line44="        let buffer: any[] = [];" line45="        let buffer_index = 0;" line46="        for (let i = 0; i &lt; pocet_cisel; i++) buffer.push(0);" line47="" line48="        control.inBackground(function () {" line49="            while (true) {" line50="" line51="                buffer[buffer_index] = Math.round(hodnota_k_odeslani * koef_zaokrouhleni);" line52="                if (buffer_index &lt; pocet_cisel) buffer_index++;" line53="                else buffer.shift();" line54="" line55="                pause(t_pause / pocet_cisel);" line56="            }" line57="        })" line58="" line59="        control.inBackground(function () {" line60="            while (true) {" line61="" line62="                let buf = pins.createBuffer(pocet_cisel * 2 + popis_hodnoty.length)" line63="" line64="                for (let j = 0; j &lt; pocet_cisel; j++) {" line65="" line66="                    buf.setNumber(NumberFormat.Int16LE, j * 2, buffer[j])" line67="                }" line68="" line69="                for (let k = 0; k &lt; popis_hodnoty.length; k++) {" line70="" line71="                    buf.setNumber(NumberFormat.Int8LE, pocet_cisel * 2 + k, popis_hodnoty.charCodeAt(k));" line72="                }" line73="" line74="                radio.sendBuffer(buf);" line75="                pause(t_pause);" line76="            }" line77="        })" line78="" line79="    }" line80="" line81="    //% block=&quot;Spustí příjemce dat. skupina_rádia: %radioGroup&quot;" line82="    export function spustPrijemce(radioGroup: number) {" line83="" line84="        let prijato = false;" line85="" line86="        radio.onReceivedBuffer(function (receivedBuffer) {" line87="" line88="            let popis = '';" line89="            for (let l = pocet_cisel * 2; l &lt; receivedBuffer.length; l++) {" line90="" line91="                popis += String.fromCharCode(receivedBuffer.getNumber(NumberFormat.Int8LE, l));" line92="            }" line93="            for (let m = 0; m &lt; pocet_cisel; m++) {" line94="" line95="                serial.writeLine(popis + ':' + receivedBuffer.getNumber(NumberFormat.Int16LE, m * 2) / koef_zaokrouhleni);" line96="                pause(t_pause / 10 - 1);" line97="            }" line98="" line99="            prijato = true;" line100="        });" line101="" line102="        radio.setGroup(radioGroup)" line103="        serial.redirectToUSB()" line104="" line105="        control.runInParallel(function () {" line106="" line107="            while (true) {" line108="" line109="                if (prijato) {" line110="" line111="                    led.plot(0, 0)" line112="                    pause(100);" line113="                    prijato = false;" line114="                } else {" line115="" line116="                    led.unplot(0, 0);" line117="                    pause(100);" line118="                }" line119="            }" line120="" line121="        });" line122="    }" line123="" line124="}" numlines="125"></mutation></block></statement></block></xml>